{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This CloudFormation template performs all the necessary steps of installing MemSQL onto EC2, assigning roles, and configuring the Studio environment with your cluster's information. This creates a MemSQL cluster running memsql-server 6.7.1-146ae8d333 and memsql-studio 1.3.3",
  "Parameters": {
    "leafInstanceType": {
      "Default": "m4.2xlarge",
      "Type": "String",
      "Description": "EC2 instance type for leaves",
      "AllowedValues": [
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r5.xlarge",
        "r5.2xlarge",
        "r5.4xlarge"
      ]
    },
    "vpcID": {
      "Default": "",
      "Type": "String",
      "Description": "ID of the VPC to launch into"
    },
    "numAggregators": {
      "Default": 1,
      "MinValue": 0,
      "Type": "Number",
      "Description": "Number of child aggregators in the cluster (between 0 and 20). Separately, the master aggregator will automatically be created",
      "MaxValue": 20
    },
    "license": {
      "Default": "",
      "Type": "String",
      "Description": "A license you received from the MemSQL Customer Portal"
    },
    "keyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "AWS EC2 Key Pair for creating nodes. Learn more about EC2 Key Pairs: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html"
    },
    "securityGroups": {
      "Default": "",
      "Type": "CommaDelimitedList",
      "Description": "Comma delimited list of security group IDs for the instances. Must be in VPC defined above"
    },
    "aggInstanceType": {
      "Default": "m4.2xlarge",
      "Type": "String",
      "Description": "EC2 instance type for master aggregator and child aggregators. AWS Instance type information: https://aws.amazon.com/ec2/instance-types",
      "AllowedValues": [
        "m4.xlarge",
        "m4.2xlarge",
        "m5.xlarge",
        "m5.2xlarge",
        "r4.xlarge",
        "r4.2xlarge",
        "r5.xlarge",
        "r5.2xlarge"
      ]
    },
    "rootPassword": {
      "Default": "",
      "NoEcho": true,
      "Type": "String",
      "Description": "Optional: define a root password that will be shared across all the nodes in your cluster"
    },
    "subnetID": {
      "Default": "",
      "Type": "String",
      "Description": "ID of subnet to launch into. Must be in VPC defined above"
    },
    "enableHighAvailablity": {
      "Default": "true",
      "Type": "String",
      "Description": "You should only specify an even number of leaves if enabled as an extra leaf will not be utilized. Learn more about High Availability: https://docs.memsql.com/operational-manual/v6.5/managing-high-availability/",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "numLeaves": {
      "Default": 2,
      "MinValue": 1,
      "Type": "Number",
      "Description": "Number of leaves in the cluster (between 1 and 100)",
      "MaxValue": 100
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Parameters": [
            "keyName",
            "license"
          ],
          "Label": {
            "default": "Basic Setup (Required)"
          }
        },
        {
          "Parameters": [
            "aggInstanceType",
            "numAggregators",
            "leafInstanceType",
            "numLeaves",
            "enableHighAvailablity",
            "rootPassword"
          ],
          "Label": {
            "default": "Advanced Configuration"
          }
        },
        {
          "Parameters": [
            "vpcID",
            "subnetID",
            "securityGroups"
          ],
          "Label": {
            "default": "Advanced Security Configuration with VPC (Optional)"
          }
        }
      ],
      "ParameterLabels": {
        "leafInstanceType": {
          "default": "Leaf Instance Type*"
        },
        "vpcID": {
          "default": "VPC ID"
        },
        "numAggregators": {
          "default": "Number of Child Aggregators*"
        },
        "license": {
          "default": "License*"
        },
        "keyName": {
          "default": "Key Name*"
        },
        "securityGroups": {
          "default": "Security Group IDs"
        },
        "numLeaves": {
          "default": "Number of Leaves*"
        },
        "rootPassword": {
          "default": "MemSQL Password"
        },
        "subnetID": {
          "default": "Subnet ID"
        },
        "enableHighAvailablity": {
          "default": "Enable High Availability*"
        },
        "aggInstanceType": {
          "default": "Aggregator Instance Type*"
        }
      }
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-west-1": {
        "AMI": "ami-057de30fc18d8dc01"
      },
      "us-east-1": {
        "AMI": "ami-0f02385141da32687"
      },
      "ap-northeast-1": {
        "AMI": "ami-01f3e530c0d92ac2c"
      },
      "sa-east-1": {
        "AMI": "ami-0647724e8115aec7a"
      },
      "ap-northeast-2": {
        "AMI": "ami-0d0cfd9087b1e9855"
      },
      "ap-southeast-1": {
        "AMI": "ami-05a79758f521b17de"
      },
      "ca-central-1": {
        "AMI": "ami-0b973f0be3c408304"
      },
      "ap-southeast-2": {
        "AMI": "ami-0fd6ae1f73e7ed5bf"
      },
      "us-west-2": {
        "AMI": "ami-0d20ffdb79215a465"
      },
      "us-east-2": {
        "AMI": "ami-0278b3d07afebbb2c"
      },
      "ap-south-1": {
        "AMI": "ami-0d1d9b53cd57c0641"
      },
      "eu-central-1": {
        "AMI": "ami-0027861a0d6c5f1cc"
      },
      "eu-west-1": {
        "AMI": "ami-0388a1e0ac05dfac9"
      },
      "eu-west-2": {
        "AMI": "ami-0c9cea540a8c21248"
      },
      "eu-west-3": {
        "AMI": "ami-034fea0a04a886579"
      }
    }
  },
  "Conditions": {
    "CreateLeaf31": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf32"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            31
          ]
        }
      ]
    },
    "CreateLeaf30": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf31"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            30
          ]
        }
      ]
    },
    "CreateLeaf33": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf34"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            33
          ]
        }
      ]
    },
    "CreateLeaf32": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf33"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            32
          ]
        }
      ]
    },
    "CreateLeaf35": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf36"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            35
          ]
        }
      ]
    },
    "CreateLeaf34": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf35"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            34
          ]
        }
      ]
    },
    "CreateLeaf37": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf38"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            37
          ]
        }
      ]
    },
    "CreateLeaf36": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf37"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            36
          ]
        }
      ]
    },
    "CreateLeaf39": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf40"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            39
          ]
        }
      ]
    },
    "CreateLeaf38": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf39"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            38
          ]
        }
      ]
    },
    "CreateLeaf44": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf45"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            44
          ]
        }
      ]
    },
    "CreateLeaf45": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf46"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            45
          ]
        }
      ]
    },
    "CreateLeaf46": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf47"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            46
          ]
        }
      ]
    },
    "CreateLeaf47": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf48"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            47
          ]
        }
      ]
    },
    "CreateLeaf40": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf41"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            40
          ]
        }
      ]
    },
    "CreateLeaf41": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf42"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            41
          ]
        }
      ]
    },
    "CreateLeaf42": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf43"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            42
          ]
        }
      ]
    },
    "CreateLeaf43": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf44"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            43
          ]
        }
      ]
    },
    "CreateLeaf48": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf49"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            48
          ]
        }
      ]
    },
    "CreateLeaf49": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf50"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            49
          ]
        }
      ]
    },
    "CreateLeaf100": {
      "Fn::Equals": [
        {
          "Ref": "numLeaves"
        },
        100
      ]
    },
    "CreateLeaf57": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf58"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            57
          ]
        }
      ]
    },
    "CreateLeaf56": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf57"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            56
          ]
        }
      ]
    },
    "CreateLeaf55": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf56"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            55
          ]
        }
      ]
    },
    "CreateLeaf54": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf55"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            54
          ]
        }
      ]
    },
    "CreateLeaf53": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf54"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            53
          ]
        }
      ]
    },
    "CreateLeaf52": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf53"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            52
          ]
        }
      ]
    },
    "CreateLeaf51": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf52"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            51
          ]
        }
      ]
    },
    "CreateLeaf50": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf51"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            50
          ]
        }
      ]
    },
    "CreateLeaf59": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf60"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            59
          ]
        }
      ]
    },
    "CreateLeaf58": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf59"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            58
          ]
        }
      ]
    },
    "CreateAggregator16": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator17"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            16
          ]
        }
      ]
    },
    "CreateAggregator17": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator18"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            17
          ]
        }
      ]
    },
    "CreateAggregator14": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator15"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            14
          ]
        }
      ]
    },
    "CreateAggregator15": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator16"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            15
          ]
        }
      ]
    },
    "CreateAggregator12": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator13"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            12
          ]
        }
      ]
    },
    "CreateAggregator13": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator14"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            13
          ]
        }
      ]
    },
    "CreateAggregator10": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator11"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            10
          ]
        }
      ]
    },
    "CreateAggregator11": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator12"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            11
          ]
        }
      ]
    },
    "CreateAggregator18": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator19"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            18
          ]
        }
      ]
    },
    "CreateAggregator19": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator20"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            19
          ]
        }
      ]
    },
    "CreateLeaf62": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf63"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            62
          ]
        }
      ]
    },
    "CreateLeaf63": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf64"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            63
          ]
        }
      ]
    },
    "CreateLeaf60": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf61"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            60
          ]
        }
      ]
    },
    "CreateLeaf61": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf62"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            61
          ]
        }
      ]
    },
    "CreateLeaf66": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf67"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            66
          ]
        }
      ]
    },
    "CreateLeaf67": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf68"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            67
          ]
        }
      ]
    },
    "CreateLeaf64": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf65"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            64
          ]
        }
      ]
    },
    "CreateLeaf65": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf66"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            65
          ]
        }
      ]
    },
    "CreateVPC": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "vpcID"
            },
            ""
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "subnetID"
            },
            ""
          ]
        }
      ]
    },
    "CreateLeaf68": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf69"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            68
          ]
        }
      ]
    },
    "CreateLeaf69": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf70"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            69
          ]
        }
      ]
    },
    "CreateLeaf79": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf80"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            79
          ]
        }
      ]
    },
    "CreateLeaf78": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf79"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            78
          ]
        }
      ]
    },
    "CreateLeaf75": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf76"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            75
          ]
        }
      ]
    },
    "CreateLeaf74": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf75"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            74
          ]
        }
      ]
    },
    "CreateLeaf77": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf78"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            77
          ]
        }
      ]
    },
    "CreateLeaf76": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf77"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            76
          ]
        }
      ]
    },
    "CreateLeaf71": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf72"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            71
          ]
        }
      ]
    },
    "CreateLeaf70": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf71"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            70
          ]
        }
      ]
    },
    "CreateLeaf73": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf74"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            73
          ]
        }
      ]
    },
    "CreateLeaf72": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf73"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            72
          ]
        }
      ]
    },
    "CreateAggregator8": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator9"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            8
          ]
        }
      ]
    },
    "CreateAggregator9": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator10"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            9
          ]
        }
      ]
    },
    "CreateAggregator4": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator5"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            4
          ]
        }
      ]
    },
    "CreateAggregator5": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator6"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            5
          ]
        }
      ]
    },
    "CreateAggregator6": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator7"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            6
          ]
        }
      ]
    },
    "CreateAggregator7": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator8"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            7
          ]
        }
      ]
    },
    "CreateAggregator1": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator2"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            1
          ]
        }
      ]
    },
    "CreateAggregator2": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator3"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            2
          ]
        }
      ]
    },
    "CreateAggregator3": {
      "Fn::Or": [
        {
          "Condition": "CreateAggregator4"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numAggregators"
            },
            3
          ]
        }
      ]
    },
    "CreateLeaf80": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf81"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            80
          ]
        }
      ]
    },
    "CreateLeaf81": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf82"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            81
          ]
        }
      ]
    },
    "CreateLeaf82": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf83"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            82
          ]
        }
      ]
    },
    "CreateLeaf83": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf84"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            83
          ]
        }
      ]
    },
    "CreateLeaf84": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf85"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            84
          ]
        }
      ]
    },
    "CreateLeaf85": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf86"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            85
          ]
        }
      ]
    },
    "CreateLeaf86": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf87"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            86
          ]
        }
      ]
    },
    "CreateLeaf87": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf88"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            87
          ]
        }
      ]
    },
    "CreateLeaf88": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf89"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            88
          ]
        }
      ]
    },
    "CreateLeaf89": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf90"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            89
          ]
        }
      ]
    },
    "CreateAggregator20": {
      "Fn::Equals": [
        {
          "Ref": "numAggregators"
        },
        20
      ]
    },
    "CreateLeaf7": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf8"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            7
          ]
        }
      ]
    },
    "CreateLeaf6": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf7"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            6
          ]
        }
      ]
    },
    "CreateLeaf5": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf6"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            5
          ]
        }
      ]
    },
    "CreateLeaf4": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf5"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            4
          ]
        }
      ]
    },
    "CreateLeaf3": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf4"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            3
          ]
        }
      ]
    },
    "CreateLeaf2": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf3"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            2
          ]
        }
      ]
    },
    "CreateLeaf1": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf2"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            1
          ]
        }
      ]
    },
    "CreateLeaf9": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf10"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            9
          ]
        }
      ]
    },
    "CreateLeaf8": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf9"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            8
          ]
        }
      ]
    },
    "CreateLeaf19": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf20"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            19
          ]
        }
      ]
    },
    "CreateLeaf18": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf19"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            18
          ]
        }
      ]
    },
    "CreateLeaf13": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf14"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            13
          ]
        }
      ]
    },
    "CreateLeaf12": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf13"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            12
          ]
        }
      ]
    },
    "CreateLeaf11": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf12"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            11
          ]
        }
      ]
    },
    "CreateLeaf10": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf11"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            10
          ]
        }
      ]
    },
    "CreateLeaf17": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf18"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            17
          ]
        }
      ]
    },
    "CreateLeaf16": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf17"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            16
          ]
        }
      ]
    },
    "CreateLeaf15": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf16"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            15
          ]
        }
      ]
    },
    "CreateLeaf14": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf15"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            14
          ]
        }
      ]
    },
    "CreateLeaf93": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf94"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            93
          ]
        }
      ]
    },
    "CreateLeaf92": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf93"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            92
          ]
        }
      ]
    },
    "CreateLeaf91": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf92"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            91
          ]
        }
      ]
    },
    "CreateLeaf90": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf91"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            90
          ]
        }
      ]
    },
    "CreateLeaf97": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf98"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            97
          ]
        }
      ]
    },
    "CreateLeaf96": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf97"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            96
          ]
        }
      ]
    },
    "CreateLeaf95": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf96"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            95
          ]
        }
      ]
    },
    "CreateLeaf94": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf95"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            94
          ]
        }
      ]
    },
    "CreateLeaf99": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf100"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            99
          ]
        }
      ]
    },
    "CreateLeaf98": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf99"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            98
          ]
        }
      ]
    },
    "CreateLeaf26": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf27"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            26
          ]
        }
      ]
    },
    "CreateLeaf27": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf28"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            27
          ]
        }
      ]
    },
    "CreateLeaf24": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf25"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            24
          ]
        }
      ]
    },
    "CreateLeaf25": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf26"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            25
          ]
        }
      ]
    },
    "CreateLeaf22": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf23"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            22
          ]
        }
      ]
    },
    "CreateLeaf23": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf24"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            23
          ]
        }
      ]
    },
    "CreateLeaf20": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf21"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            20
          ]
        }
      ]
    },
    "CreateLeaf21": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf22"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            21
          ]
        }
      ]
    },
    "CreateLeaf28": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf29"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            28
          ]
        }
      ]
    },
    "CreateLeaf29": {
      "Fn::Or": [
        {
          "Condition": "CreateLeaf30"
        },
        {
          "Fn::Equals": [
            {
              "Ref": "numLeaves"
            },
            29
          ]
        }
      ]
    }
  },
  "Resources": {
    "NLBListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": {
          "Ref": "NetworkLoadBalancer"
        },
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "NLBTargetGroup"
            },
            "Type": "forward"
          }
        ],
        "Protocol": "TCP",
        "Port": 3306
      }
    },
    "Aggregator20": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  20
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator20"
    },
    "Leaf64": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  64
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf64"
    },
    "Leaf65": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  65
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf65"
    },
    "Leaf66": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  66
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf66"
    },
    "Leaf67": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  67
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf67"
    },
    "Leaf60": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  60
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf60"
    },
    "Leaf61": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  61
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf61"
    },
    "Leaf62": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  62
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf62"
    },
    "Leaf63": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  63
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf63"
    },
    "Leaf68": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  68
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf68"
    },
    "Leaf69": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  69
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf69"
    },
    "Leaf5": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  5
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf5"
    },
    "Leaf4": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  4
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf4"
    },
    "Leaf7": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  7
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf7"
    },
    "Leaf6": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  6
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf6"
    },
    "Leaf1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  1
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf1"
    },
    "Leaf3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  3
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf3"
    },
    "Leaf2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  2
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf2"
    },
    "Leaf9": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  9
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf9"
    },
    "Leaf8": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  8
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf8"
    },
    "Leaf73": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  73
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf73"
    },
    "Leaf72": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  72
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf72"
    },
    "Leaf71": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  71
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf71"
    },
    "Leaf70": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  70
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf70"
    },
    "Leaf77": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  77
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf77"
    },
    "Leaf76": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  76
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf76"
    },
    "Leaf75": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  75
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf75"
    },
    "Leaf74": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  74
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf74"
    },
    "Leaf79": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  79
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf79"
    },
    "Leaf78": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  78
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf78"
    },
    "Aggregator2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  2
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator2"
    },
    "Aggregator3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  3
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator3"
    },
    "Aggregator1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  1
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator1"
    },
    "Aggregator6": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  6
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator6"
    },
    "Aggregator7": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  7
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator7"
    },
    "Aggregator4": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  4
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator4"
    },
    "Aggregator5": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  5
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator5"
    },
    "Aggregator8": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  8
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator8"
    },
    "Aggregator9": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  9
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator9"
    },
    "AggregatorsWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": {
          "Ref": "numAggregators"
        },
        "Handle": {
          "Ref": "AggregatorsWaitHandle"
        },
        "Timeout": 3000
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      },
      "Condition": "CreateVPC",
      "DependsOn": "VPCGatewayAttachment"
    },
    "Master": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=$(memsqlctl create-node -y 2>&1 > /dev/null)\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=$(memsqlctl set-license --license ${LICENSE} -y 2>&1 > /dev/null)\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1 > /dev/null)\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=$(memsqlctl bootstrap-aggregator --host $INTERNAL_IP -y 2>&1 > /dev/null)\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n    exit 1\nfi\n\nif [ ${ENABLE_HIGH_AVAILABILITY} = true ]; then\n    OUT=$(memsqlctl update-config --key redundancy_level --value 2 --set-global -y 2>&1 > /dev/null)\n    if [ $? -ne 0 ]; then\n        /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n        exit 1\n    fi\nfi\n\necho '${LEAF_DATA}' > /tmp/leaves.json\nfor leaf in $(cat /tmp/leaves.json | jq -r '.[]'); do\n    host=$(echo $leaf | jq -r '.. | .Host? | select(.)')\n    port=$(echo $leaf | jq -r '.. | .Port? | select(.)')\n    OUT=$(memsqlctl add-leaf --user root --password '${ROOT_PASSWORD}' --host $host --port $port -y 2>&1 > /dev/null)\n    if [ $? -ne 0 ]; then\n        /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n        exit 1\n    fi\ndone\n\necho '${AGGREGATOR_DATA}' > /tmp/aggregators.json\nfor aggregator in $(cat /tmp/aggregators.json | jq -r '.[]'); do\n    host=$(echo $aggregator | jq -r '.. | .Host? | select(.)')\n    port=$(echo $aggregator | jq -r '.. | .Port? | select(.)')\n    OUT=$(memsqlctl add-aggregator --user root --password '${ROOT_PASSWORD}' --host $host --port $port -y 2>&1 > /dev/null)\n    if [ $? -ne 0 ]; then\n        /opt/aws/bin/cfn-signal -s false --reason \"$OUT\" '${WAIT_HANDLE}'\n        exit 1\n    fi\ndone\n\ncat << EOF > /var/lib/memsql-studio/studio.hcl\nversion = 1\n\ncluster \"${STACK_NAME}\" {\n  name = \"${STACK_NAME}\"\n  description = \"Cluster profile populated by Cloudformation template\"\n  hostname = \"localhost\"\n  port = 3306\n  profile = \"DEVELOPMENT\"\n}\nEOF\n\nsystemctl start memsql-studio\n\n/opt/aws/bin/cfn-signal -s true '${WAIT_HANDLE}'\n",
              {
                "LICENSE": {
                  "Ref": "license"
                },
                "ENABLE_HIGH_AVAILABILITY": {
                  "Ref": "enableHighAvailablity"
                },
                "STACK_NAME": {
                  "Ref": "AWS::StackName"
                },
                "AGGREGATOR_DATA": {
                  "Fn::GetAtt": [
                    "AggregatorsWaitCondition",
                    "Data"
                  ]
                },
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "LEAF_DATA": {
                  "Fn::GetAtt": [
                    "LeavesWaitCondition",
                    "Data"
                  ]
                },
                "WAIT_HANDLE": {
                  "Ref": "MasterWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Master"
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Master"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public80Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "DependsOn": [
        "AggregatorsWaitCondition"
      ]
    },
    "Leaf88": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  88
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf88"
    },
    "Leaf89": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  89
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf89"
    },
    "Leaf86": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  86
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf86"
    },
    "Leaf87": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  87
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf87"
    },
    "Leaf84": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  84
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf84"
    },
    "Leaf85": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  85
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf85"
    },
    "Leaf82": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  82
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf82"
    },
    "Leaf83": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  83
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf83"
    },
    "Leaf80": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  80
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf80"
    },
    "Leaf81": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  81
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf81"
    },
    "PublicSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      },
      "Condition": "CreateVPC"
    },
    "Leaf99": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  99
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf99"
    },
    "Leaf98": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  98
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf98"
    },
    "Leaf95": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  95
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf95"
    },
    "Leaf94": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  94
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf94"
    },
    "Leaf97": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  97
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf97"
    },
    "Leaf96": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  96
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf96"
    },
    "Leaf91": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  91
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf91"
    },
    "Leaf90": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  90
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf90"
    },
    "Leaf93": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  93
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf93"
    },
    "Leaf92": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  92
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf92"
    },
    "Leaf15": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  15
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf15"
    },
    "Leaf14": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  14
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf14"
    },
    "Leaf17": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  17
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf17"
    },
    "Leaf16": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  16
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf16"
    },
    "Leaf11": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  11
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf11"
    },
    "Leaf10": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  10
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf10"
    },
    "Leaf13": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  13
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf13"
    },
    "Leaf12": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  12
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf12"
    },
    "Leaf19": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  19
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf19"
    },
    "Leaf18": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  18
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf18"
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "Condition": "CreateVPC"
    },
    "MasterWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Handle": {
          "Ref": "MasterWaitHandle"
        },
        "Timeout": 3000
      }
    },
    "NetworkLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Subnets": {
          "Fn::If": [
            "CreateVPC",
            [
              {
                "Ref": "PublicSubnet"
              }
            ],
            [
              {
                "Ref": "subnetID"
              }
            ]
          ]
        },
        "Scheme": "internet-facing",
        "Type": "network",
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "LB"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "LB"
                ]
              ]
            }
          }
        ]
      }
    },
    "MasterWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Subnet"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Condition": "CreateVPC"
    },
    "Leaf20": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  20
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf20"
    },
    "Leaf21": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  21
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf21"
    },
    "Leaf22": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  22
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf22"
    },
    "Leaf23": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  23
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf23"
    },
    "Leaf24": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  24
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf24"
    },
    "Leaf25": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  25
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf25"
    },
    "Leaf26": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  26
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf26"
    },
    "Leaf27": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  27
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf27"
    },
    "Leaf28": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  28
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf28"
    },
    "Leaf29": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  29
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf29"
    },
    "AggregatorsWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "Public3306Access": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "3306",
            "FromPort": "3306",
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Public access to port 3306",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Public3306SecurityGroup"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "Internal3306Access": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Internal access to port 3306",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Internal3306SecurityGroup"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "RouteTable"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "Aggregator14": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  14
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator14"
    },
    "Aggregator15": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  15
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator15"
    },
    "Aggregator16": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  16
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator16"
    },
    "Aggregator17": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  17
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator17"
    },
    "Aggregator10": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  10
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator10"
    },
    "Aggregator11": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  11
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator11"
    },
    "Aggregator12": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  12
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator12"
    },
    "Aggregator13": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  13
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator13"
    },
    "Aggregator18": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  18
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator18"
    },
    "Aggregator19": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "AggregatorsWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Aggregator",
                  19
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Aggregator"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "aggInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Public3306Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateAggregator19"
    },
    "Leaf100": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  100
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf100"
    },
    "Leaf39": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  39
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf39"
    },
    "Leaf38": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  38
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf38"
    },
    "Leaf37": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  37
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf37"
    },
    "Leaf36": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  36
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf36"
    },
    "Leaf35": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  35
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf35"
    },
    "Leaf34": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  34
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf34"
    },
    "Leaf33": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  33
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf33"
    },
    "Leaf32": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  32
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf32"
    },
    "Leaf31": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  31
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf31"
    },
    "Leaf30": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  30
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf30"
    },
    "LeavesWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": {
          "Ref": "numLeaves"
        },
        "Handle": {
          "Ref": "LeavesWaitHandle"
        },
        "Timeout": 3000
      }
    },
    "Leaf52": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  52
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf52"
    },
    "NLBTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "VpcId": {
          "Fn::If": [
            "CreateVPC",
            {
              "Ref": "VPC"
            },
            {
              "Ref": "vpcID"
            }
          ]
        },
        "Protocol": "TCP",
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "TG"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "LB"
                ]
              ]
            }
          }
        ],
        "Targets": [
          {
            "Port": 3306,
            "Id": {
              "Ref": "Master"
            }
          },
          {
            "Fn::If": [
              "CreateAggregator1",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator1"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator2",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator2"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator3",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator3"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator4",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator4"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator5",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator5"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator6",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator6"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator7",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator7"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator8",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator8"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator9",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator9"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator10",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator10"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator11",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator11"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator12",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator12"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator13",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator13"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator14",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator14"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator15",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator15"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator16",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator16"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator17",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator17"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator18",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator18"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator19",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator19"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "CreateAggregator20",
              {
                "Port": 3306,
                "Id": {
                  "Ref": "Aggregator20"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "Port": 3306
      }
    },
    "Leaf48": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  48
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf48"
    },
    "Leaf49": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  49
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf49"
    },
    "Leaf42": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  42
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf42"
    },
    "Leaf43": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  43
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf43"
    },
    "Leaf40": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  40
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf40"
    },
    "Leaf41": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  41
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf41"
    },
    "Leaf46": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  46
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf46"
    },
    "Leaf47": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  47
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf47"
    },
    "Leaf44": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  44
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf44"
    },
    "Leaf45": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  45
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf45"
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "VPC"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "Internal3306AccessIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "ToPort": "3306",
        "FromPort": "3306",
        "IpProtocol": "tcp",
        "GroupId": {
          "Fn::GetAtt": [
            "Internal3306Access",
            "GroupId"
          ]
        },
        "CidrIp": {
          "Fn::GetAtt": [
            "VPC",
            "CidrBlock"
          ]
        }
      },
      "Condition": "CreateVPC"
    },
    "LeavesWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "Public80Access": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "80",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Public access to port 80",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Public80SecurityGroup"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "Leaf59": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  59
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf59"
    },
    "Leaf58": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  58
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf58"
    },
    "Leaf51": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  51
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf51"
    },
    "Leaf50": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  50
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf50"
    },
    "Leaf53": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  53
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf53"
    },
    "Public22Access": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "22",
            "FromPort": "22",
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Public access to port 22",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Public22SecurityGroup"
                ]
              ]
            }
          }
        ]
      },
      "Condition": "CreateVPC"
    },
    "Leaf55": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  55
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf55"
    },
    "Leaf54": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  54
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf54"
    },
    "Leaf57": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  57
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf57"
    },
    "Leaf56": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash -x\nINTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\n\nOUT=\"$(memsqlctl create-node -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\nOUT=\"$(memsqlctl change-root-password --password \"${ROOT_PASSWORD}\" -y 2>&1)\"\nif [ $? -ne 0 ]; then\n    /opt/aws/bin/cfn-signal -s false --reason $OUT '${WAIT_HANDLE}'\n    exit 1\nfi\n\n/opt/aws/bin/cfn-signal -s true -d '{\"Host\":\"'$INTERNAL_IP'\",\"Port\":3306}' '${WAIT_HANDLE}'\n",
              {
                "ROOT_PASSWORD": {
                  "Ref": "rootPassword"
                },
                "WAIT_HANDLE": {
                  "Ref": "LeavesWaitHandle"
                }
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Leaf",
                  56
                ]
              ]
            }
          },
          {
            "Key": "Role",
            "Value": "Leaf"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 1024
            }
          }
        ],
        "KeyName": {
          "Ref": "keyName"
        },
        "InstanceType": {
          "Ref": "leafInstanceType"
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Fn::If": [
                "CreateVPC",
                {
                  "Ref": "PublicSubnet"
                },
                {
                  "Ref": "subnetID"
                }
              ]
            },
            "DeviceIndex": 0,
            "DeleteOnTermination": "true",
            "GroupSet": {
              "Fn::If": [
                "CreateVPC",
                [
                  {
                    "Ref": "Public22Access"
                  },
                  {
                    "Ref": "Internal3306Access"
                  }
                ],
                {
                  "Ref": "securityGroups"
                }
              ]
            },
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "Condition": "CreateLeaf56"
    }
  },
  "Outputs": {
    "AggregatorLoadBalancerEndpoint": {
      "Description": "Public DNSName of the load balancer for the aggregators",
      "Value": {
        "Fn::GetAtt": [
          "NetworkLoadBalancer",
          "DNSName"
        ]
      }
    },
    "MasterAggregator": {
      "Description": "Public DNSName of the master aggregator",
      "Value": {
        "Fn::GetAtt": [
          "Master",
          "PublicDnsName"
        ]
      }
    }
  }
}
